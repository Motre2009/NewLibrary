//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace NewLibrary
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        private global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace NewLibrary.NewLibrary_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[58];
            _typeNameTable[0] = "NewLibrary.Converter";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[3] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[5] = "System.Enum";
            _typeNameTable[6] = "System.ValueType";
            _typeNameTable[7] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[8] = "Boolean";
            _typeNameTable[9] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[10] = "Double";
            _typeNameTable[11] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[12] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[13] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[14] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[15] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[16] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[18] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[19] = "String";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[21] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[23] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[25] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[29] = "NewLibrary.MainWindow";
            _typeNameTable[30] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[31] = "Microsoft.UI.Xaml.Controls.ItemsView";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Controls.Layout";
            _typeNameTable[33] = "Microsoft.UI.Xaml.IElementFactory";
            _typeNameTable[34] = "Int32";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider";
            _typeNameTable[36] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[37] = "System.Collections.Generic.IReadOnlyList`1<Object>";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Controls.Primitives.IScrollController";
            _typeNameTable[40] = "Microsoft.UI.Xaml.Controls.StackLayout";
            _typeNameTable[41] = "Microsoft.UI.Xaml.Controls.VirtualizingLayout";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation";
            _typeNameTable[44] = "NewLibrary.View.AllBooksPage";
            _typeNameTable[45] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[46] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[47] = "System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>";
            _typeNameTable[48] = "System.Collections.ObjectModel.Collection`1<NewLibrary.Book>";
            _typeNameTable[49] = "NewLibrary.Book";
            _typeNameTable[50] = "System.Uri";
            _typeNameTable[51] = "NewLibrary.View.FavoritesPage";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.UniformGridLayout";
            _typeNameTable[53] = "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification";
            _typeNameTable[54] = "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch";
            _typeNameTable[55] = "NewLibrary.View.Genre";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[57] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[58];
            _typeTable[0] = typeof(global::NewLibrary.Converter);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[3] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[5] = typeof(global::System.Enum);
            _typeTable[6] = typeof(global::System.ValueType);
            _typeTable[7] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[8] = typeof(global::System.Boolean);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[10] = typeof(global::System.Double);
            _typeTable[11] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[12] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[13] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[14] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[18] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[19] = typeof(global::System.String);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[23] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[29] = typeof(global::NewLibrary.MainWindow);
            _typeTable[30] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsView);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Controls.Layout);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.IElementFactory);
            _typeTable[34] = typeof(global::System.Int32);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider);
            _typeTable[36] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[37] = typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Object>);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.Controls.StackLayout);
            _typeTable[41] = typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation);
            _typeTable[44] = typeof(global::NewLibrary.View.AllBooksPage);
            _typeTable[45] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[46] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[47] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>);
            _typeTable[48] = typeof(global::System.Collections.ObjectModel.Collection<global::NewLibrary.Book>);
            _typeTable[49] = typeof(global::NewLibrary.Book);
            _typeTable[50] = typeof(global::System.Uri);
            _typeTable[51] = typeof(global::NewLibrary.View.FavoritesPage);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayout);
            _typeTable[53] = typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch);
            _typeTable[55] = typeof(global::NewLibrary.View.Genre);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[57] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Converter() { return new global::NewLibrary.Converter(); }
        private object Activate_2_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_22_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_24_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_27_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_29_MainWindow() { return new global::NewLibrary.MainWindow(); }
        private object Activate_31_ItemsView() { return new global::Microsoft.UI.Xaml.Controls.ItemsView(); }
        private object Activate_35_ItemCollectionTransitionProvider() { return new global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider(); }
        private object Activate_36_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_40_StackLayout() { return new global::Microsoft.UI.Xaml.Controls.StackLayout(); }
        private object Activate_41_VirtualizingLayout() { return new global::Microsoft.UI.Xaml.Controls.VirtualizingLayout(); }
        private object Activate_44_AllBooksPage() { return new global::NewLibrary.View.AllBooksPage(); }
        private object Activate_47_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>(); }
        private object Activate_48_Collection() { return new global::System.Collections.ObjectModel.Collection<global::NewLibrary.Book>(); }
        private object Activate_49_Book() { return new global::NewLibrary.Book(); }
        private object Activate_51_FavoritesPage() { return new global::NewLibrary.View.FavoritesPage(); }
        private object Activate_52_UniformGridLayout() { return new global::Microsoft.UI.Xaml.Controls.UniformGridLayout(); }
        private object Activate_55_Genre() { return new global::NewLibrary.View.Genre(); }
        private object Activate_56_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_Converter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::NewLibrary.Converter).TypeHandle);
        private void StaticInitializer_2_NavigationView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle);
        private void StaticInitializer_4_NavigationViewPaneDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode).TypeHandle);
        private void StaticInitializer_5_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_6_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_7_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_12_NavigationViewDisplayMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode).TypeHandle);
        private void StaticInitializer_14_NavigationViewBackButtonVisible() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible).TypeHandle);
        private void StaticInitializer_18_NavigationViewOverflowLabelMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode).TypeHandle);
        private void StaticInitializer_20_NavigationViewSelectionFollowsFocus() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus).TypeHandle);
        private void StaticInitializer_21_NavigationViewShoulderNavigationEnabled() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled).TypeHandle);
        private void StaticInitializer_22_NavigationViewTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle);
        private void StaticInitializer_24_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_25_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_27_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_29_MainWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::NewLibrary.MainWindow).TypeHandle);
        private void StaticInitializer_31_ItemsView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsView).TypeHandle);
        private void StaticInitializer_32_Layout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Layout).TypeHandle);
        private void StaticInitializer_35_ItemCollectionTransitionProvider() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider).TypeHandle);
        private void StaticInitializer_36_ScrollView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollView).TypeHandle);
        private void StaticInitializer_37_IReadOnlyList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IReadOnlyList<global::System.Object>).TypeHandle);
        private void StaticInitializer_38_ItemsViewSelectionMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode).TypeHandle);
        private void StaticInitializer_39_IScrollController() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController).TypeHandle);
        private void StaticInitializer_40_StackLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.StackLayout).TypeHandle);
        private void StaticInitializer_41_VirtualizingLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout).TypeHandle);
        private void StaticInitializer_43_IndexBasedLayoutOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation).TypeHandle);
        private void StaticInitializer_44_AllBooksPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::NewLibrary.View.AllBooksPage).TypeHandle);
        private void StaticInitializer_47_ObservableCollection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>).TypeHandle);
        private void StaticInitializer_48_Collection() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.ObjectModel.Collection<global::NewLibrary.Book>).TypeHandle);
        private void StaticInitializer_49_Book() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::NewLibrary.Book).TypeHandle);
        private void StaticInitializer_50_Uri() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Uri).TypeHandle);
        private void StaticInitializer_51_FavoritesPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::NewLibrary.View.FavoritesPage).TypeHandle);
        private void StaticInitializer_52_UniformGridLayout() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayout).TypeHandle);
        private void StaticInitializer_53_UniformGridLayoutItemsJustification() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification).TypeHandle);
        private void StaticInitializer_54_UniformGridLayoutItemsStretch() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch).TypeHandle);
        private void StaticInitializer_55_Genre() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::NewLibrary.View.Genre).TypeHandle);
        private void StaticInitializer_56_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_57_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void VectorAdd_7_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::NewLibrary.Book>)instance;
            var newItem = (global::NewLibrary.Book)item;
            collection.Add(newItem);
        }
        private void VectorAdd_48_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::NewLibrary.Book>)instance;
            var newItem = (global::NewLibrary.Book)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  NewLibrary.Converter
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_Converter;
                userType.StaticInitializer = StaticInitializer_0_Converter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_2_NavigationView;
                userType.StaticInitializer = StaticInitializer_2_NavigationView;
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("Header");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 3:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_4_NavigationViewPaneDisplayMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 5:   //  System.Enum
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_5_Enum;
                xamlType = userType;
                break;

            case 6:   //  System.ValueType
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_6_ValueType;
                xamlType = userType;
                break;

            case 7:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_7_IList;
                userType.CollectionAdd = VectorAdd_7_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  Boolean
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Double
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_12_NavigationViewDisplayMode;
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 13:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_14_NavigationViewBackButtonVisible;
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 15:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_18_NavigationViewOverflowLabelMode;
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 19:   //  String
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_20_NavigationViewSelectionFollowsFocus;
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 21:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_21_NavigationViewShoulderNavigationEnabled;
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 22:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_22_NavigationViewTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_24_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_24_NavigationViewItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 25:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_25_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_27_InfoBadge;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  NewLibrary.MainWindow
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_29_MainWindow;
                userType.StaticInitializer = StaticInitializer_29_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Microsoft.UI.Xaml.Controls.ItemsView
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_31_ItemsView;
                userType.StaticInitializer = StaticInitializer_31_ItemsView;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Layout");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("CurrentItemIndex");
                userType.AddMemberName("IsItemInvokedEnabled");
                userType.AddMemberName("ItemTransitionProvider");
                userType.AddMemberName("ScrollView");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("VerticalScrollController");
                xamlType = userType;
                break;

            case 32:   //  Microsoft.UI.Xaml.Controls.Layout
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_32_Layout;
                userType.AddMemberName("IndexBasedLayoutOrientation");
                xamlType = userType;
                break;

            case 33:   //  Microsoft.UI.Xaml.IElementFactory
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  Int32
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_35_ItemCollectionTransitionProvider;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_36_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.Generic.IReadOnlyList`1<Object>
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_37_IReadOnlyList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_38_ItemsViewSelectionMode;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode.None);
                userType.AddEnumValue("Single", global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode.Single);
                userType.AddEnumValue("Multiple", global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode.Multiple);
                userType.AddEnumValue("Extended", global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode.Extended);
                xamlType = userType;
                break;

            case 39:   //  Microsoft.UI.Xaml.Controls.Primitives.IScrollController
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_39_IScrollController;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  Microsoft.UI.Xaml.Controls.StackLayout
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.VirtualizingLayout"));
                userType.Activator = Activate_40_StackLayout;
                userType.StaticInitializer = StaticInitializer_40_StackLayout;
                userType.AddMemberName("Orientation");
                userType.AddMemberName("Spacing");
                xamlType = userType;
                break;

            case 41:   //  Microsoft.UI.Xaml.Controls.VirtualizingLayout
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout"));
                userType.Activator = Activate_41_VirtualizingLayout;
                userType.StaticInitializer = StaticInitializer_41_VirtualizingLayout;
                xamlType = userType;
                break;

            case 42:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_43_IndexBasedLayoutOrientation;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.None);
                userType.AddEnumValue("TopToBottom", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.TopToBottom);
                userType.AddEnumValue("LeftToRight", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.LeftToRight);
                xamlType = userType;
                break;

            case 44:   //  NewLibrary.View.AllBooksPage
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_AllBooksPage;
                userType.StaticInitializer = StaticInitializer_44_AllBooksPage;
                userType.AddMemberName("Books");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<NewLibrary.Book>"));
                userType.StaticInitializer = StaticInitializer_47_ObservableCollection;
                userType.CollectionAdd = VectorAdd_47_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  System.Collections.ObjectModel.Collection`1<NewLibrary.Book>
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_Collection;
                userType.StaticInitializer = StaticInitializer_48_Collection;
                userType.CollectionAdd = VectorAdd_48_Collection;
                xamlType = userType;
                break;

            case 49:   //  NewLibrary.Book
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_49_Book;
                userType.StaticInitializer = StaticInitializer_49_Book;
                userType.AddMemberName("Title");
                userType.AddMemberName("Author");
                userType.AddMemberName("Genre");
                userType.AddMemberName("CoverImage");
                userType.AddMemberName("IsFavorite");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  System.Uri
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_50_Uri;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  NewLibrary.View.FavoritesPage
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_FavoritesPage;
                userType.StaticInitializer = StaticInitializer_51_FavoritesPage;
                userType.AddMemberName("Books");
                userType.AddMemberName("FavoriteBooks");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.UniformGridLayout
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.VirtualizingLayout"));
                userType.Activator = Activate_52_UniformGridLayout;
                userType.StaticInitializer = StaticInitializer_52_UniformGridLayout;
                userType.AddMemberName("Orientation");
                userType.AddMemberName("MinItemWidth");
                userType.AddMemberName("MaximumRowsOrColumns");
                userType.AddMemberName("ItemsJustification");
                userType.AddMemberName("ItemsStretch");
                userType.AddMemberName("MinColumnSpacing");
                userType.AddMemberName("MinItemHeight");
                userType.AddMemberName("MinRowSpacing");
                xamlType = userType;
                break;

            case 53:   //  Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_53_UniformGridLayoutItemsJustification;
                userType.AddEnumValue("Start", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.Start);
                userType.AddEnumValue("Center", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.Center);
                userType.AddEnumValue("End", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.End);
                userType.AddEnumValue("SpaceAround", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceAround);
                userType.AddEnumValue("SpaceBetween", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceBetween);
                userType.AddEnumValue("SpaceEvenly", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification.SpaceEvenly);
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_54_UniformGridLayoutItemsStretch;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.None);
                userType.AddEnumValue("Fill", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.Fill);
                userType.AddEnumValue("Uniform", global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch.Uniform);
                xamlType = userType;
                break;

            case 55:   //  NewLibrary.View.Genre
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_55_Genre;
                userType.StaticInitializer = StaticInitializer_55_Genre;
                userType.AddMemberName("Books");
                userType.AddMemberName("FilteredBooks");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_56_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_56_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 57:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_57_IList;
                userType.CollectionAdd = VectorAdd_57_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_0_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_1_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_1_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_2_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_3_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_3_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_4_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_4_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_5_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_5_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_6_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_6_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_7_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_7_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_8_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_9_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_9_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_10_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_11_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_11_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_12_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_12_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_13_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_13_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_14_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_14_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_15_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_15_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_16_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_16_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_17_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_17_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_18_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_18_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_19_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_19_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_20_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_20_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_21_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_21_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_22_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_22_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_23_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_23_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_24_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_24_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_25_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_25_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_26_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_26_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_27_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_27_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_28_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_28_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_29_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_29_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_30_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_30_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_31_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_31_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_32_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_32_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_33_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_33_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_34_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_35_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_35_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_36_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_37_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_37_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_38_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_39_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_39_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_40_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_40_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_41_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_41_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_42_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_42_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_43_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_44_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_44_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_45_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_45_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_46_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_46_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_47_ItemsView_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.ItemsSource;
        }
        private void set_47_ItemsView_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_48_ItemsView_Layout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.Layout;
        }
        private void set_48_ItemsView_Layout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.Layout = (global::Microsoft.UI.Xaml.Controls.Layout)Value;
        }
        private object get_49_ItemsView_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.ItemTemplate;
        }
        private void set_49_ItemsView_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.ItemTemplate = (global::Microsoft.UI.Xaml.IElementFactory)Value;
        }
        private object get_50_ItemsView_CurrentItemIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.CurrentItemIndex;
        }
        private object get_51_ItemsView_IsItemInvokedEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.IsItemInvokedEnabled;
        }
        private void set_51_ItemsView_IsItemInvokedEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.IsItemInvokedEnabled = (global::System.Boolean)Value;
        }
        private object get_52_ItemsView_ItemTransitionProvider(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.ItemTransitionProvider;
        }
        private void set_52_ItemsView_ItemTransitionProvider(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.ItemTransitionProvider = (global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider)Value;
        }
        private object get_53_ItemsView_ScrollView(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.ScrollView;
        }
        private object get_54_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_54_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_55_ItemsView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.SelectedItem;
        }
        private object get_56_ItemsView_SelectedItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.SelectedItems;
        }
        private object get_57_ItemsView_SelectionMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.SelectionMode;
        }
        private void set_57_ItemsView_SelectionMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.SelectionMode = (global::Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode)Value;
        }
        private object get_58_ItemsView_VerticalScrollController(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            return that.VerticalScrollController;
        }
        private void set_58_ItemsView_VerticalScrollController(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsView)instance;
            that.VerticalScrollController = (global::Microsoft.UI.Xaml.Controls.Primitives.IScrollController)Value;
        }
        private object get_59_StackLayout_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            return that.Orientation;
        }
        private void set_59_StackLayout_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_60_StackLayout_Spacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            return that.Spacing;
        }
        private void set_60_StackLayout_Spacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.StackLayout)instance;
            that.Spacing = (global::System.Double)Value;
        }
        private object get_61_Layout_IndexBasedLayoutOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Layout)instance;
            return that.IndexBasedLayoutOrientation;
        }
        private object get_62_AllBooksPage_Books(object instance)
        {
            var that = (global::NewLibrary.View.AllBooksPage)instance;
            return that.Books;
        }
        private void set_62_AllBooksPage_Books(object instance, object Value)
        {
            var that = (global::NewLibrary.View.AllBooksPage)instance;
            that.Books = (global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>)Value;
        }
        private object get_63_Book_Title(object instance)
        {
            var that = (global::NewLibrary.Book)instance;
            return that.Title;
        }
        private void set_63_Book_Title(object instance, object Value)
        {
            var that = (global::NewLibrary.Book)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_64_Book_Author(object instance)
        {
            var that = (global::NewLibrary.Book)instance;
            return that.Author;
        }
        private void set_64_Book_Author(object instance, object Value)
        {
            var that = (global::NewLibrary.Book)instance;
            that.Author = (global::System.String)Value;
        }
        private object get_65_Book_Genre(object instance)
        {
            var that = (global::NewLibrary.Book)instance;
            return that.Genre;
        }
        private void set_65_Book_Genre(object instance, object Value)
        {
            var that = (global::NewLibrary.Book)instance;
            that.Genre = (global::System.String)Value;
        }
        private object get_66_Book_CoverImage(object instance)
        {
            var that = (global::NewLibrary.Book)instance;
            return that.CoverImage;
        }
        private void set_66_Book_CoverImage(object instance, object Value)
        {
            var that = (global::NewLibrary.Book)instance;
            that.CoverImage = (global::System.Uri)Value;
        }
        private object get_67_Book_IsFavorite(object instance)
        {
            var that = (global::NewLibrary.Book)instance;
            return that.IsFavorite;
        }
        private void set_67_Book_IsFavorite(object instance, object Value)
        {
            var that = (global::NewLibrary.Book)instance;
            that.IsFavorite = (global::System.Boolean)Value;
        }
        private object get_68_FavoritesPage_Books(object instance)
        {
            var that = (global::NewLibrary.View.FavoritesPage)instance;
            return that.Books;
        }
        private void set_68_FavoritesPage_Books(object instance, object Value)
        {
            var that = (global::NewLibrary.View.FavoritesPage)instance;
            that.Books = (global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>)Value;
        }
        private object get_69_FavoritesPage_FavoriteBooks(object instance)
        {
            var that = (global::NewLibrary.View.FavoritesPage)instance;
            return that.FavoriteBooks;
        }
        private void set_69_FavoritesPage_FavoriteBooks(object instance, object Value)
        {
            var that = (global::NewLibrary.View.FavoritesPage)instance;
            that.FavoriteBooks = (global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>)Value;
        }
        private object get_70_UniformGridLayout_Orientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.Orientation;
        }
        private void set_70_UniformGridLayout_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_71_UniformGridLayout_MinItemWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinItemWidth;
        }
        private void set_71_UniformGridLayout_MinItemWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinItemWidth = (global::System.Double)Value;
        }
        private object get_72_UniformGridLayout_MaximumRowsOrColumns(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MaximumRowsOrColumns;
        }
        private void set_72_UniformGridLayout_MaximumRowsOrColumns(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MaximumRowsOrColumns = (global::System.Int32)Value;
        }
        private object get_73_UniformGridLayout_ItemsJustification(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.ItemsJustification;
        }
        private void set_73_UniformGridLayout_ItemsJustification(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.ItemsJustification = (global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification)Value;
        }
        private object get_74_UniformGridLayout_ItemsStretch(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.ItemsStretch;
        }
        private void set_74_UniformGridLayout_ItemsStretch(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.ItemsStretch = (global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch)Value;
        }
        private object get_75_UniformGridLayout_MinColumnSpacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinColumnSpacing;
        }
        private void set_75_UniformGridLayout_MinColumnSpacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinColumnSpacing = (global::System.Double)Value;
        }
        private object get_76_UniformGridLayout_MinItemHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinItemHeight;
        }
        private void set_76_UniformGridLayout_MinItemHeight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinItemHeight = (global::System.Double)Value;
        }
        private object get_77_UniformGridLayout_MinRowSpacing(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            return that.MinRowSpacing;
        }
        private void set_77_UniformGridLayout_MinRowSpacing(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.UniformGridLayout)instance;
            that.MinRowSpacing = (global::System.Double)Value;
        }
        private object get_78_Genre_Books(object instance)
        {
            var that = (global::NewLibrary.View.Genre)instance;
            return that.Books;
        }
        private void set_78_Genre_Books(object instance, object Value)
        {
            var that = (global::NewLibrary.View.Genre)instance;
            that.Books = (global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>)Value;
        }
        private object get_79_Genre_FilteredBooks(object instance)
        {
            var that = (global::NewLibrary.View.Genre)instance;
            return that.FilteredBooks;
        }
        private void set_79_Genre_FilteredBooks(object instance, object Value)
        {
            var that = (global::NewLibrary.View.Genre)instance;
            that.FilteredBooks = (global::System.Collections.ObjectModel.ObservableCollection<global::NewLibrary.Book>)Value;
        }
        private object get_80_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_81_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_81_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_82_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_83_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_84_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_84_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_85_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_85_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_86_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember xamlMember = null;
            global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_0_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_NavigationView_Header;
                xamlMember.Setter = set_1_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_3_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_4_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_5_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_6_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_NavigationView_ContentOverlay;
                xamlMember.Setter = set_7_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_9_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_11_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_12_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_13_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_14_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_15_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_16_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_17_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_18_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_19_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_20_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_21_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_22_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_23_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_24_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_25_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_26_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_27_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_NavigationView_PaneFooter;
                xamlMember.Setter = set_28_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_NavigationView_PaneHeader;
                xamlMember.Setter = set_29_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_NavigationView_PaneTitle;
                xamlMember.Setter = set_30_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_31_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_NavigationView_SelectedItem;
                xamlMember.Setter = set_32_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_33_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_35_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_NavigationViewItem_Icon;
                xamlMember.Setter = set_37_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_39_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_40_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_41_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_42_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_44_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_45_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_46_NavigationViewItemBase_IsSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.ItemsSource":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_ItemsView_ItemsSource;
                xamlMember.Setter = set_47_ItemsView_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.Layout":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Layout", "Microsoft.UI.Xaml.Controls.Layout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_ItemsView_Layout;
                xamlMember.Setter = set_48_ItemsView_Layout;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.ItemTemplate":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Microsoft.UI.Xaml.IElementFactory");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ItemsView_ItemTemplate;
                xamlMember.Setter = set_49_ItemsView_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.CurrentItemIndex":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "CurrentItemIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ItemsView_CurrentItemIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.IsItemInvokedEnabled":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsItemInvokedEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ItemsView_IsItemInvokedEnabled;
                xamlMember.Setter = set_51_ItemsView_IsItemInvokedEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.ItemTransitionProvider":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ItemTransitionProvider", "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ItemsView_ItemTransitionProvider;
                xamlMember.Setter = set_52_ItemsView_ItemTransitionProvider;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.ScrollView":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ScrollView", "Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ItemsView_ScrollView;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_ScrollView_Content;
                xamlMember.Setter = set_54_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.SelectedItem":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_ItemsView_SelectedItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.SelectedItems":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.Generic.IReadOnlyList`1<Object>");
                xamlMember.Getter = get_56_ItemsView_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.SelectionMode":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "SelectionMode", "Microsoft.UI.Xaml.Controls.ItemsViewSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_ItemsView_SelectionMode;
                xamlMember.Setter = set_57_ItemsView_SelectionMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsView.VerticalScrollController":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsView");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "VerticalScrollController", "Microsoft.UI.Xaml.Controls.Primitives.IScrollController");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_ItemsView_VerticalScrollController;
                xamlMember.Setter = set_58_ItemsView_VerticalScrollController;
                break;
            case "Microsoft.UI.Xaml.Controls.StackLayout.Orientation":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_StackLayout_Orientation;
                xamlMember.Setter = set_59_StackLayout_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.StackLayout.Spacing":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.StackLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Spacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_StackLayout_Spacing;
                xamlMember.Setter = set_60_StackLayout_Spacing;
                break;
            case "Microsoft.UI.Xaml.Controls.Layout.IndexBasedLayoutOrientation":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IndexBasedLayoutOrientation", "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation");
                xamlMember.Getter = get_61_Layout_IndexBasedLayoutOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "NewLibrary.View.AllBooksPage.Books":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.View.AllBooksPage");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Books", "System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>");
                xamlMember.Getter = get_62_AllBooksPage_Books;
                xamlMember.Setter = set_62_AllBooksPage_Books;
                break;
            case "NewLibrary.Book.Title":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.Book");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_63_Book_Title;
                xamlMember.Setter = set_63_Book_Title;
                break;
            case "NewLibrary.Book.Author":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.Book");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Author", "String");
                xamlMember.Getter = get_64_Book_Author;
                xamlMember.Setter = set_64_Book_Author;
                break;
            case "NewLibrary.Book.Genre":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.Book");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Genre", "String");
                xamlMember.Getter = get_65_Book_Genre;
                xamlMember.Setter = set_65_Book_Genre;
                break;
            case "NewLibrary.Book.CoverImage":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.Book");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "CoverImage", "System.Uri");
                xamlMember.Getter = get_66_Book_CoverImage;
                xamlMember.Setter = set_66_Book_CoverImage;
                break;
            case "NewLibrary.Book.IsFavorite":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.Book");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsFavorite", "Boolean");
                xamlMember.Getter = get_67_Book_IsFavorite;
                xamlMember.Setter = set_67_Book_IsFavorite;
                break;
            case "NewLibrary.View.FavoritesPage.Books":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.View.FavoritesPage");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Books", "System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>");
                xamlMember.Getter = get_68_FavoritesPage_Books;
                xamlMember.Setter = set_68_FavoritesPage_Books;
                break;
            case "NewLibrary.View.FavoritesPage.FavoriteBooks":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.View.FavoritesPage");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "FavoriteBooks", "System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>");
                xamlMember.Getter = get_69_FavoritesPage_FavoriteBooks;
                xamlMember.Setter = set_69_FavoritesPage_FavoriteBooks;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.Orientation":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_UniformGridLayout_Orientation;
                xamlMember.Setter = set_70_UniformGridLayout_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemWidth":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MinItemWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_UniformGridLayout_MinItemWidth;
                xamlMember.Setter = set_71_UniformGridLayout_MinItemWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MaximumRowsOrColumns":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MaximumRowsOrColumns", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_UniformGridLayout_MaximumRowsOrColumns;
                xamlMember.Setter = set_72_UniformGridLayout_MaximumRowsOrColumns;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsJustification":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ItemsJustification", "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_UniformGridLayout_ItemsJustification;
                xamlMember.Setter = set_73_UniformGridLayout_ItemsJustification;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.ItemsStretch":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "ItemsStretch", "Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_UniformGridLayout_ItemsStretch;
                xamlMember.Setter = set_74_UniformGridLayout_ItemsStretch;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinColumnSpacing":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MinColumnSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_UniformGridLayout_MinColumnSpacing;
                xamlMember.Setter = set_75_UniformGridLayout_MinColumnSpacing;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinItemHeight":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MinItemHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_UniformGridLayout_MinItemHeight;
                xamlMember.Setter = set_76_UniformGridLayout_MinItemHeight;
                break;
            case "Microsoft.UI.Xaml.Controls.UniformGridLayout.MinRowSpacing":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UniformGridLayout");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "MinRowSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_UniformGridLayout_MinRowSpacing;
                xamlMember.Setter = set_77_UniformGridLayout_MinRowSpacing;
                break;
            case "NewLibrary.View.Genre.Books":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.View.Genre");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Books", "System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>");
                xamlMember.Getter = get_78_Genre_Books;
                xamlMember.Setter = set_78_Genre_Books;
                break;
            case "NewLibrary.View.Genre.FilteredBooks":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NewLibrary.View.Genre");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "FilteredBooks", "System.Collections.ObjectModel.ObservableCollection`1<NewLibrary.Book>");
                xamlMember.Getter = get_79_Genre_FilteredBooks;
                xamlMember.Setter = set_79_Genre_FilteredBooks;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_80_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_TreeViewNode_Content;
                xamlMember.Setter = set_81_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_84_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_84_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_85_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::NewLibrary.NewLibrary_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::NewLibrary.NewLibrary_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_86_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::NewLibrary.NewLibrary_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::NewLibrary.NewLibrary_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

